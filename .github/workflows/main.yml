name: Run Spring and Vite

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  JAVA_DISTRO: 'corretto'
  JAVA_MAJOR_VERSION: '21'
  NODE_MAJOR_VERSION: '22'

jobs:
  main-ci-cd:
    name: 'Main Pipeline'
    runs-on: 'ubuntu-latest'
    services:
      # Use the services keyword to start Docker Compose
      docker:
        image: docker/compose:latest
        options: --privileged # Necessary for docker compose to work in GitHub Actions

    steps:
      - name: 'Setup :: Checkout'
        uses: 'actions/checkout@v4'

      - name: 'Setup :: Java'
        uses: 'actions/setup-java@v3'
        with:
          distribution: ${{ env.JAVA_DISTRO }}
          java-version: ${{ env.JAVA_MAJOR_VERSION }}
          cache: 'maven'

      - name: 'Setup :: Node'
        uses: 'actions/setup-node@v3'
        with:
          node-version: ${{ env.NODE_MAJOR_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'src/main/typescript/package-lock.json'

      - name: Update mail key
        run: sed -i 's/\${SPRING_MAIL_KEY}/${{ secrets.SPRING_MAIL_KEY }}/g' src/main/resources/application.yml

      - name: Update mail dev
        run: sed -i 's/\${SPRING_MAIL_KEY}/${{ secrets.SPRING_MAIL_KEY }}/g' src/main/resources/application-dev.yml

      - name: Update mail test
        run: sed -i 's/\${SPRING_MAIL_KEY}/${{ secrets.SPRING_MAIL_KEY }}/g' src/main/resources/application-test.yml

      - name: Build and start containers
        run: |
          # Ensure correct permissions for mvnw
          chmod +x ./mvnw
          # Build the images first
          docker compose build
          # Start the containers in detached mode
          docker compose up -d

      - name: Wait for containers to be healthy #Important to avoid race conditions
        run: docker compose ps --services --filter "status=healthy" --quiet

      - name: 'Application :: Build'
        run: ./mvnw package -DskipTests

      - name: 'Application :: Test'
        run: ./mvnw test

      - name: Stop containers
        if: always()
        run: docker compose down